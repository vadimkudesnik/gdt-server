generator client {
  provider = "prisma-client-js"
  output   = "./__generated__"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  //Основные данные
  login    String @unique
  email    String @unique
  password String

  //ФИО
  name       String
  surname    String
  secondname String?

  picture String?

  //Роли
  isAdmin       Boolean @default(false) @map("is_admin")
  isNewsManager Boolean @default(false) @map("is_news_manager")

  //Ключи
  isVerified         Boolean @default(false) @map("is_verified")
  isTwoFactorEnabled Boolean @default(false) @map("is_two_factor_enabled")

  //Метод аутентификации
  method   AuthMethod @default(CREDENTIAL)
  accounts Account[]

  //Печать времени
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Account {
  id String @id @default(uuid())

  //Базовые данные
  type     String
  provider String

  //Токены
  refreshToken String? @map("refresh_token")
  accessToken  String? @map("access_token")
  expiresAt    Int     @map("expires_at")

  //Печать времени
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //Связь с USer
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  @@map("accounts")
}

model Token {
  id String @id @default(uuid())

  email     String
  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  @@map("tokens")
}

enum AuthMethod {
  CREDENTIAL
  YANDEX
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
}
